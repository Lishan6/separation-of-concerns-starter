'use strict';

const a0_0x322e = [
  'createElement',
  'textContent',
  'appendChild',
  'string',
  'setAttribute',
];
(function (_0xd53d58, _0x322e5c) {
  const _0x3c8370 = function (_0x47f6ce) {
    while (--_0x47f6ce) {
      _0xd53d58['push'](_0xd53d58['shift']());
    }
  };
  _0x3c8370(++_0x322e5c);
})(a0_0x322e, 0x9c);
const a0_0x3c83 = function (_0xd53d58, _0x322e5c) {
  _0xd53d58 = _0xd53d58 - 0x0;
  let _0x3c8370 = a0_0x322e[_0xd53d58];
  return _0x3c8370;
};
const reference = (_0x19e1c1) => {
  const {
      name: _0x4091a3,
      attributes: _0x48df94 = {},
      children: _0x5db17e = [],
    } = _0x19e1c1,
    _0xfab20 = document[a0_0x3c83('0x4')](_0x4091a3);
  for (const _0x57fc22 in _0x48df94) {
    const _0x505dfb = _0x48df94[_0x57fc22];
    _0xfab20[a0_0x3c83('0x3')](_0x57fc22, _0x505dfb);
  }
  for (const _0x35f527 of _0x5db17e) {
    if (typeof _0x35f527 === a0_0x3c83('0x2'))
      _0xfab20[a0_0x3c83('0x0')] += _0x35f527;
    else {
      const _0x5db179 = reference(_0x35f527);
      _0xfab20[a0_0x3c83('0x1')](_0x5db179);
    }
  }
  return _0xfab20;
};
